name: Docker Compose EC2 Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v3

      - name: 🧱 Build Spring Boot
        working-directory: backend
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: 🛠 Build React (disable CI to ignore warnings)
        working-directory: frontend
        run: |
          export CI=false
          npm ci
          npm run build

      - name: ✍️ Generate .env from secrets
        run: |
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env
          echo "REDIS_HOST=redis" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env


      - name: Debug : tlqkfshadk
        run: |
          echo "✅ 확인: backend/build/libs"
          find backend/build/libs || echo "❌ JAR 없음"
          
          echo "✅ 확인: frontend/build"
          find frontend/build || echo "❌ React 빌드 없음"
          
          echo "✅ 확인: .env"
          cat .env || echo "❌ .env 없음"

          echo "✅ 확인: docker-compose.yml"
          ls -l docker-compose.yml || echo "❌ 없음"

      - name: 🚚 Copy app to EC2
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          source: |
            backend/build/libs/*.jar
            frontend/build/**
            nginx/default.conf
            docker-compose.yml
            .env
          target: /home/ec2-user/app
          strip_components: 0
          rm: true

      - name: 🚀 Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ec2-user/app
            docker-compose down || true
            docker-compose up -d --build
