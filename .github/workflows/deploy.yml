name: Docker Compose EC2 Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v3

      - name: 🧱 Build Spring Boot
        working-directory: backend
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test

      - name: 🛠 Build React (disable CI to ignore warnings)
        working-directory: frontend
        run: |
          export CI=false
          npm ci
          npm run build

      - name: ✍️ Generate .env from secrets
        run: |
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" > .env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env
          echo "REDIS_HOST=redis" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env

      - name: 🚚 Copy files to EC2 via scp
        env:
          SSH_KEY: ${{ secrets.EC2_KEY }}
        run: |
          # SSH 키 준비
          echo "$SSH_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem

          # EC2 디렉토리 생성
          ssh -o StrictHostKeyChecking=no -i deploy_key.pem \
              ec2-user@${{ secrets.EC2_HOST }} "mkdir -p /home/ec2-user/app"

          # 파일 전송 (로컬 셸이 glob 처리)
          scp -o StrictHostKeyChecking=no -i deploy_key.pem \
            backend/build/libs/*.jar \
            -r frontend/build nginx/default.conf docker-compose.yml .env \
            ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/app

      - name: 🚀 Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ec2-user/app
            docker-compose down || true
            docker-compose up -d --build
